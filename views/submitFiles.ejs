<style>
  .fileControls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 50px;
  }

  .fileControls a {
    color: rebeccapurple !important;
  }

  .disabled {
    opacity: 0.7;
    cursor: not-allowed !important;
  }

  .delete_button {
    color: red;
    cursor: pointer;
    user-select: none;
  }

  .spinner {
    display: inline-block;
    width: 16px;
    height: 16px;
    margin-right: 8px;
    border: 2px solid rgba(255, 0, 55, 0.815);
    border-top: 2px solid #fa003e;
    border-radius: 50%;
    animation: spin 0.6s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .form-control {
    width: 70%;
    height: inherit;
    margin: auto !important;
  }

  .submitFile {
    background-color: #600186;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    height: inherit;
  }

  .submit-next:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
  }
</style>

<div id="upload-manuscript" class="form-section hidden">
  <form onsubmit="return false" enctype="multipart/form-data" id="submitFiles">
    <div>
      <input type="text" name="manuscript_id" value="<%=article_id%>" readonly hidden>
      <h3 class="manu_head">Upload Manuscript Files</h3> <br>

      <label for=""><span style="color: #e22424;">*</span>Main Manuscript File:</label>
      <div class="fileControls" id="manuscriptFileContainer">
        <% if(manuscript_file) { %>
        <a href="/doc?url=<%=manuscript_file%>" target="_blank">manuscript_file</a>
        <span class="delete_button" onclick="createPlainField('manuscript_file', 'Manuscript File', 0)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control requiredFiles" name="manuscript_file" accept=".docx, .pdf, .doc">
        <input type="button" class="submitFile" onclick="UploadSingleFile('manuscript_file', 'Manuscript File')" value='Upload File'>
        <% } %>
      </div>
    </div>

    <div id="coverLetterContainer">
      <label for=""><span style="color: #e22424;">*</span>Cover Letter:</label>
      <div class="fileControls" id="coverLetterFileContainer">
        <% if(coverLetter && coverLetter !== null && coverLetter !== "N/A") { %>
        <a href="/doc?url=<%=coverLetter%>" target="_blank">Cover Letter</a>
        <span class="delete_button" onclick="createPlainField('cover_letter_file', 'Cover Letter', 1)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control requiredFiles" name="cover_letter_file">
        <input type="button" class="submitFile" onclick="UploadSingleFile('cover_letter_file', 'Cover letter')" value='Upload File'>
        <% } %>
      </div>
    </div>

    <!-- Other file sections remain the same -->
    <div id="tablesContainer">
      <label for="">Tables:</label>
      <div class="fileControls">
        <% if(tables && tables !== null) { %>
        <a href="/doc?url=<%=tables%>" target="_blank">Tables</a>
        <span class="delete_button" onclick="createPlainField('tables', 'Tables', 2)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control" name="tables">
        <input type="button" class="submitFile" onclick="UploadSingleFile('tables', 'Tables')" value='Upload File'>
        <% } %>
      </div>
    </div>

    <div id="">
      <label for="">Figures:</label>
      <div class="fileControls">
        <% if(figures && figures !== null) { %>
        <a href="/doc?url=<%=figures%>" target="_blank">Figures</a>
        <span class="delete_button" onclick="createPlainField('figures', 'Figures', 3)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control" name="figures">
        <input type="button" class="submitFile" onclick="UploadSingleFile('figures', 'Figures')" value='Upload File'>
        <% } %>
      </div>
    </div>

    <div>
      <label for="">Supplementary Material:</label>
      <div class="fileControls">
        <% if(supplementaryMaterials && supplementaryMaterials !== null && supplementaryMaterials !== 'not-found') { %>
        <a href="/doc?url=<%=supplementaryMaterials%>" target="_blank">Supplementary Material</a>
        <span class="delete_button" onclick="createPlainField('supplementary_material', 'Supplmenetary Material', 4)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control" name="supplementary_material">
        <input type="button" class="submitFile" onclick="UploadSingleFile('supplementary_material', 'Supplementary Materials')" value='Upload File'>
        <% } %>
      </div>
    </div>

    <div>
      <label for="">Point-by-Point Response to Reviewers (for revised manuscripts):</label>
      <div class="fileControls">
        <% if(graphic_abstract && graphic_abstract!== null) { %>
        <a href="/doc?url=<%=graphic_abstract%>" target="_blank">Graphic Abstract</a>
        <span class="delete_button" onclick="createPlainField('graphic_abstract', 'Graphic Abstract', 5)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control" name="graphic_abstract">
        <input type="button" class="submitFile" onclick="UploadSingleFile('graphic_abstract', 'Point by point response')" value='Upload File'>
        <% } %>
      </div>
    </div>
    
    <div>
      <label for="">Main Manuscript File with Tracked Changes (for revised manuscripts):</label>
      <div class="fileControls">
        <% if(tracked_manuscript_file && tracked_manuscript_file !== null) { %>
        <a href="/doc?url=<%=tracked_manuscript_file%>" target="_blank">Tracked Manuscript File</a>
        <span class="delete_button" onclick="createPlainField('tracked_manuscript_file', 'Tracked Manuscript File', 6)"><i class="fa fa-trash"></i> Remove File</span>
        <% }else{ %>
        <input type="file" class="form-control" name="tracked_manuscript_file">
        <input type="button" class="submitFile" onclick="UploadSingleFile('tracked_manuscript_file', 'Tracked Manuscript File')" value='Upload File'>
        <% } %>
      </div>
    </div>
    
    <p style="color: #e22424;">* Indicates Mandatory Fields</p>
    <br>

    <div style="display: flex; justify-content: space-around;">
      <button type="button" class="submit-next" onclick="NavigationNext('article-type', 'article_type_nav','upload_manuscript_nav',0)">Back</button>
      <input type="submit" value="submit" id="submitFiles" disabled hidden>
      <button type="button" class="submit-next nextManuscript" id="continueButton" onclick="checkRequiredFiles()" disabled>Save & Continue</button>
    </div>
  </form>
</div>

<script>
  // Track upload status
  let manuscriptFileUploaded = <%= manuscript_file ? 'true' : 'false' %>;
  let coverLetterUploaded = <%= (coverLetter && coverLetter !== null && coverLetter !== "N/A") ? 'true' : 'false' %>;

  // Initialize the continue button state
  document.addEventListener('DOMContentLoaded', function() {
    updateContinueButton();
  });

  // Function to update the continue button state
  function updateContinueButton() {
    const continueButton = document.getElementById('continueButton');
    if (manuscriptFileUploaded && coverLetterUploaded) {
      continueButton.disabled = false;
      continueButton.classList.remove('disabled');
    } else {
      continueButton.disabled = true;
      continueButton.classList.add('disabled');
    }
  }

  function createFileField(fieldname, publicName, buttonIndex) {
    const fileControls = document.querySelectorAll(".fileControls")[buttonIndex];
    fileControls.innerHTML = ` 
        <input type="file" class="form-control" name="${fieldname}">
        <input type="button" class="submitFile" onclick="UploadSingleFile('${fieldname}', '${publicName}')" value='Upload File'>
    `;
    
    // Update flags when file is removed
    if (fieldname === 'manuscript_file') {
        manuscriptFileUploaded = false;
    } else if (fieldname === 'cover_letter_file') {
        coverLetterUploaded = false;
    }
    
    updateContinueButton();
  }

  function createPlainField(fieldname, publicName, buttonIndex) {
    createFileField(fieldname, publicName, buttonIndex);
  }

  // Function to check if both manuscript file and cover letter are uploaded
  function checkRequiredFiles() {
    if (!manuscriptFileUploaded) {
      iziToast.error({message: 'Please upload your manuscript file.', position: "topRight"});
      return;
    }

    if (!coverLetterUploaded) {
      iziToast.error({message: 'Please upload your cover letter file.', position: "topRight"});
      return;
    }

    // Proceed to next step
    showNext('title', 'upload-manuscript', 'upload_manuscript_nav', 'title_nav', 'article-type', 2, 2, 'submitFiles');
  }

  function UploadSingleFile(fieldName, publicName) {
    var fileInput = document.querySelector(`input[name="${fieldName}"]`);
    var file = fileInput.files[0];

    if (!file) {
        iziToast.error({
            message: `Please upload your ${publicName} file.`,
            position: "topRight"
        });
        return;
    }

    var allowedTypes = ["application/pdf", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"];
    var maxSize = 50 * 1024 * 1024; // 50MB

    // Check file type
    if (!allowedTypes.includes(file.type)) {
        iziToast.error({
            message: "Invalid file type. Please upload a PDF or Word document.",
            position: "topRight"
        });
        return;
    }

    // Check file size
    if (file.size > maxSize) {
        iziToast.error({
            message: "File size exceeds 50MB. Please upload a smaller file.",
            position: "topRight"
        });
        return;
    }

    var formData = new FormData();
    formData.append(fieldName, file);
    formData.append("corresponsing_auhtors_email", _userEmail.value)
    formData.append("article_id", article_idContainer.value)

    // Find the correct `.fileControls` container dynamically
    var fileControlContainer = fileInput.closest(".fileControls");
    var uploadButton = fileControlContainer.querySelector(".submitFile");

    // Disable button and show spinner
    uploadButton.disabled = true;
    uploadButton.value = "Uploading...";
    const spinner = document.createElement("span");
    spinner.className = "spinner";
    uploadButton.parentNode.insertBefore(spinner, uploadButton);
    const currentSubmissionProcess = "<%= currentSubmissionProcess %>";
    const queriedID = "<%= queriedID %>";
    const aritlcleId = document.getElementById("article_id").value

    fetch(`/manuscript/uploadSingleFile/${fieldName}?_uid=${uid.value}&prg=true&${queriedID}&${currentSubmissionProcess}=true&articleId=${aritlcleId}`, {
        method: "POST",
        body: formData
    })
    .then(res => res.json())
    .then(data => {
        // Remove spinner
        spinner.remove();

        if (data.success) {
            const fileUrl = data.fileUrl;
            const fileName = fileUrl.substring(fileUrl.lastIndexOf("/") + 1);

            // Update the fileControls container dynamically
            fileControlContainer.innerHTML = `
                <a href="/doc?url=${fileUrl}" target="_blank">${fileName}</a>
                <span class="delete_button" onclick="createPlainField('${fieldName}', '${publicName}', ${getButtonIndex(fileControlContainer)})"><i class="fa fa-trash"></i> Remove File</span>
            `;

            // Update the session flags
            if (fieldName === 'manuscript_file') {
                manuscriptFileUploaded = true;
            } else if (fieldName === 'cover_letter_file') {
                coverLetterUploaded = true;
            }

            // Update the continue button state
            updateContinueButton();
            
            showProgressSavedPopup();
        } else {
            iziToast.error({
                message: `${data.error ? data.error: data.error.message }` || "Internal Server Error",
                position: "topRight"
            });
        }

        uploadButton.disabled = false;
        uploadButton.value = "Upload File";
    })
    .catch(error => {
        console.log(error);
        spinner.remove();
        iziToast.error({
            message: error.message ? error.message : error,
            position: "topRight"
        });
        uploadButton.disabled = false;
        uploadButton.value = "Upload File";
    });
  }

  // Helper function to get the button index
  function getButtonIndex(container) {
    const allContainers = document.querySelectorAll(".fileControls");
    for (let i = 0; i < allContainers.length; i++) {
        if (allContainers[i] === container) {
            return i;
        }
    }
    return 0;
  }
</script>
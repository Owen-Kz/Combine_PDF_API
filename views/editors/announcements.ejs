<!DOCTYPE html>
<html dir="ltr" lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta http-equiv="Cache-Control" content="no-store, no-cache, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="robots" content="noindex,nofollow">
    <title>Portal | Announcement Management</title>
    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="/editorStatic/plugins/images/favicon.png">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:300,600" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css">
    <link href="/editorStatic/plugins/bower_components/chartist/dist/chartist.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/editorStatic/plugins/bower_components/chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css">
    <!-- Quill CSS -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

    <!-- Custom CSS -->
    <link href="/editorStatic/css/style.min.css" rel="stylesheet">
    <link href="/editorStatic/css/table.css" rel="stylesheet">
    <link rel='stylesheet' href='https://cdn.jsdelivr.net/jquery.selectric/1.10.1/selectric.css'>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/material-design-iconic-font/2.2.0/css/material-design-iconic-font.min.css'>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        /* Preloader styles */
        .preloader2 {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .lds-ripple2 {
            position: relative;
            width: 64px;
            height: 64px;
        }

        .lds-ripple2 div {
            position: absolute;
            border: 4px solid #310357;
            opacity: 1;
            border-radius: 50%;
            animation: ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
        }

        .lds-ripple2 div:nth-child(2) {
            animation-delay: -0.5s;
        }

        @keyframes ripple {
            0% {
                top: 28px;
                left: 28px;
                width: 0;
                height: 0;
                opacity: 1;
            }
            100% {
                top: -1px;
                left: -1px;
                width: 58px;
                height: 58px;
                opacity: 0;
            }
        }

        /* Hide the preloader when the page is loaded */
        .preloader2.hidden {
            display: none;
        }

        /* Styles for pagination controls */
        .pagination-controls {
            margin: 20px 0;
            text-align: center;
        }
        .pagination-controls button {
            margin: 0 5px;
            padding: 5px 10px;
            cursor: pointer;
            border: none;
            outline: none;
            border-radius: 25px;
            min-width: 100px;
            color: white;
        }
        .pagination-controls button:not(:disabled) {
            background-color: #310357;
        }
        .pagination-controls button:disabled {
            background-color: #31035791;
        }
        .pagination-controls span {
            font-weight: bold;
            margin: 0 10px;
        }

        /* Style for hiding preloader */
        .hidden {
            display: none;
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-toggle {
            background-color: #6b0874;
            color: white;
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background-color: white;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .dropdown-menu.show {
            display: block;
        }

        .dropdown-menu li {
            padding: 8px 12px;
            cursor: pointer;
            white-space: nowrap;
        }

        .dropdown-menu li:hover {
            background-color: #f0f0f0;
        }

        .white-box {
            border-radius: 20px !important;
        }
        .box-title {
            font-size: 14px !important;
        }

        .isWomenIScience {
            background-color: #310357;
            color: white;
            padding: 4px 12px;
            border: none;
            border-radius: 10px;
            font-size:8px;
            font-style: italic;
            cursor: pointer;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1001;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 900px;
            border-radius: 10px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: black;
        }

        /* Quill editor container */
        #editor-container {
            height: 300px;
            margin-bottom: 20px;
        }

        /* Verification modal */
        .verification-modal {
            display: none;
            position: fixed;
            z-index: 1002;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .verification-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 400px;
            border-radius: 10px;
        }

        .verification-input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .priority-select {
            margin: 15px 0;
            width: 100%;
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }

        .action-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .action-buttons button {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .confirm-btn {
            background-color: #310357;
            color: white;
        }

        .cancel-btn {
            background-color: #f44336;
            color: white;
        }

        /* Announcement priority badges */
        .priority-high {
            background-color: #ff4444;
            color: white;
            padding: 3px 8px;
            border-radius: 10px;
            font-size: 12px;
        }

        .priority-medium {
            background-color: #ffbb33;
            color: black;
            padding: 3px 8px;
            border-radius: 10px;
            font-size: 12px;
        }

        .priority-low {
            background-color: #00C851;
            color: white;
            padding: 3px 8px;
            border-radius: 10px;
            font-size: 12px;
        }

        .box-shadow {
            box-shadow: 0px 10px 30px 0px rgba(37, 37, 37, 0.10);
        }
        .align-center {
            display: flex;
            flex-direction: column;
            align-items: center;
            color:rgb(81, 81, 81);
        }
        .align-center i {
            font-size:50px;
        }
        .analytics-info {
            transition: 200ms ease-in-out;
            cursor: pointer;
            user-select: none;
        }
        .analytics-info:hover {
            transform: scale(1.1);
        }
        .align-items-center {
            align-items: center;
            justify-content: center;
            float: center;
            margin: auto;
        }
    </style>
</head>

<body>
    <!-- Preloader -->
    <div class="preloader2">
        <div class="lds-ripple2">
            <div class="lds-pos"></div>
            <div class="lds-pos"></div>
        </div>
    </div>

    <!-- Main wrapper -->
    <div id="main-wrapper" data-layout="vertical" data-navbarbg="skin5" data-sidebartype="full"
        data-sidebar-position="absolute" data-header-position="absolute" data-boxed-layout="full">
        
        <!-- Topbar header -->
        <header class="topbar" data-navbarbg="skin5" id="topbar"></header>
        <script src="/editorStatic/js/routes/topbar.js?v=<%=new Date() %>"></script>
        
        <!-- Left Sidebar -->
        <aside class="left-sidebar" data-sidebarbg="skin6" style="transition: ease-in-out 300ms;">
            <div class="scroll-sidebar">
                <nav class="sidebar-nav" id="sidebar_nav"></nav>
                <script type="module" src="/editorStatic/js/routes/dashboard/sidenav.js?v=<%=new Date() %>"></script>
            </div>
        </aside>
       
        <div class="page-wrapper">
            <div class="page-breadcrumb bg-white">
                <div class="row align-items-center">
                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
                        <h4 class="page-title">Announcement Management</h4>
                    </div>
                    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
                        <div class="d-md-flex">
                            <ol class="breadcrumb ms-auto">
                                <li><a href="/editors/logout" class="fw-normal">Dashboard</a></li>
                            </ol>
                            <a href="/editors/logout" target="_blank"
                                class="btn btn-danger  d-none d-md-block pull-right ms-3 hidden-xs hidden-sm waves-effect waves-light text-white">Logout</a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="container-fluid">
                <div class="admin col">
                    <h3><b>Welcome, <span class="userFullnameContainer"><%= user.fullname  %></span></b>
                        <h5>Announcement Manager</h5>
                    </h3>
                </div>

                <div class="row justify-content-left" id="stats">
                    <div class="col-lg-3 col-md-10">
                        <div class="white-box analytics-info box-shadow align-center">
                            <i class="bi bi-megaphone"></i>
                            <h3 class="box-title"><span class="activeAnnouncementsCount">0</span> Active Announcements</h3>
                        </div>
                    </div>
                   
                    <div class="col-lg-3 col-md-10">
                        <div class="white-box analytics-info box-shadow align-center">
                            <i class="bi bi-archive"></i>
                            <h3 class="box-title"><span class="archivedAnnouncementsCount">0</span> Archived</h3>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-10">
                        <div class="white-box analytics-info box-shadow align-center">
                            <i class="bi bi-exclamation-triangle"></i>
                            <h3 class="box-title"><span class="highPriorityCount">0</span> High Priority</h3>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-10">
                        <button class="white-box analytics-info box-shadow align-center" style="width: 100%; border: none; background: none;" onclick="openAnnouncementModal()">
                            <i class="bi bi-plus-circle"></i>
                            <h3 class="box-title">Create New Announcement</h3>
                        </button>
                    </div>
                </div>
             
                <!-- Announcements Table -->
                <div class="row">
                    <div class="col-md-12 col-lg-12 col-sm-12">
                        <div class="white-box">
                            <div class="d-md-flex mb-3">
                                <h3 class="box-title mb-0">Current Announcements</h3>
                                <div class="col-md-3 col-sm-4 col-xs-6 ms-auto">
                                    <input type="text" class="form-control form-input search" id="announcementSearch" placeholder="Search announcements">
                                </div>
                            </div>
                            <div class="projects mb-4">
                                <div class="projects-inner">
                                    <table class="projects-table">
                                        <thead>
                                            <tr>
                                                <th class="text-right">Title</th>
                                                <th class="text-right">Priority</th>
                                                <th class="text-right">Author</th>
                                                <th class="text-right">Date Created</th>
                                                <!-- <th class="text-right">Last Updated</th> -->
                                                <!-- <th class="text-right">Status</th> -->
                                                <th class="text-right">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody class="announcementsContainer" id="announcementsContainer">
                                            <!-- Announcements will be loaded here -->
                                            <tr>
                                                <td colspan="7" class="text-center">Loading announcements...</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div id="announcementPaginationContainer" class="pagination-controls"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Footer -->
            <footer class="footer text-center" id="footer"></footer>
            <script type="module" src="/editorStatic/js/routes/dashboard/footer.js?v=<%=new Date() %>"></script>
        </div>
    </div>

<%- include("./partials/newAnnouncementModal.ejs") %>

    <!-- Verification Modal -->
    <div id="verificationModal" class="verification-modal">
        <input type="hidden" id="itemID">
        <div class="verification-content">
            <span class="close" onclick="closeVerificationModal()">&times;</span>
            <h3 id="verificationModalTitle">Verify Action</h3>
            <p>Please enter the security code to confirm this action:</p>
            <input type="password" class="verification-input" id="verificationCode" placeholder="Enter security code">
            <div class="action-buttons">
                <button class="cancel-btn" onclick="closeVerificationModal()">Cancel</button>
                <button class="confirm-btn" onclick="confirmAction()">Confirm</button>
            </div>
        </div>
    </div>

 <%- include("./partials/editAnnouncementModal.ejs") %>

    <script>
        // Initialize Quill editor
        var quill = new Quill('#editor-container', {
            theme: 'snow',
            modules: {
                toolbar: [
                    [{ 'header': [1, 2, 3, false] }],
                    ['bold', 'italic', 'underline', 'strike'],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    ['link', 'image'],
                    ['clean']
                ]
            },
            placeholder: 'Write your announcement here...'
        });

        var editQuill = new Quill('#edit-editor-container', {
            theme: 'snow',
            modules: {
                toolbar: [
                    [{ 'header': [1, 2, 3, false] }],
                    ['bold', 'italic', 'underline', 'strike'],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    ['link', 'image'],
                    ['clean']
                ]
            },
            placeholder: 'Edit your announcement here...'
        });

        // Modal functions
        function openAnnouncementModal() {
            document.getElementById('announcementModal').style.display = 'block';
            document.getElementById('modalTitle').textContent = 'Create New Announcement';
            document.getElementById('announcementTitle').value = '';
            quill.setContents([{ insert: '\n' }]);
            document.getElementById('announcementPriority').value = 'medium';
        }

        function closeAnnouncementModal() {
            document.getElementById('announcementModal').style.display = 'none';
        }

        function openEditAnnouncementModal(announcementId) {
            // In a real implementation, you would fetch the announcement data here
            // For now, we'll just show the modal
            document.getElementById('editAnnouncementModal').style.display = 'block';
            const getAnnouncementData = fetch("/getAnnouncementData", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: announcementId })
            })

            getAnnouncementData.then(response => response.json()).then(data => {
                // Populate the edit form with the fetched data
                document.getElementById('editAnnouncementTitle').value = data.announcement.title;
                document.getElementById('editAnnouncementPriority').value = data.announcement.priority;
                document.getElementById("editAnnouncementId").value = data.announcement.id;
                editQuill.setContents([{ insert: data.announcement.data }]);
            });
        }

        function closeEditAnnouncementModal() {
            document.getElementById('editAnnouncementModal').style.display = 'none';
        }

        function openVerificationModal(action) {
            document.getElementById('verificationModal').style.display = 'block';
            document.getElementById('verificationCode').value = '';
            
            // Set the modal title based on the action
            let actionText = '';
            switch(action) {
                case 'publish':
                    actionText = 'Publish Announcement';
                    break;
                case 'update':
                    actionText = 'Update Announcement';
                    break;
                case 'delete':
                    actionText = 'Delete Announcement';
                    break;
                default:
                    actionText = 'Confirm Action';
            }
            
            document.getElementById('verificationModalTitle').textContent = `Verify ${actionText}`;
            // Store the current action in a data attribute
            document.getElementById('verificationModal').setAttribute('data-action', action);
        }

        function closeVerificationModal() {
            document.getElementById('verificationModal').style.display = 'none';
        }

        function verifyAction(action, id) {
            // Open verification modal and store the intended action
            document.getElementById('itemID').value = id
            openVerificationModal(action);
        }

        function confirmAction() {
            const verificationCode = document.getElementById('verificationCode').value;
            const itemID = document.getElementById('itemID').value;

            const action = document.getElementById('verificationModal').getAttribute('data-action');
            fetch("/editors/verifyCode", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ code: verificationCode, action: action })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === "success") {
                    closeVerificationModal();

                    switch(action) {
                    case 'publish':
                        publishAnnouncement();
                        break;
                    case 'update':
                        updateAnnouncement();
                        break;
                    case 'delete':
                        deleteAnnouncement(itemID);
                        break;
                }
                } else {
                    alert('Verification failed: ' + data.message);
                }
            });
        }

        function publishAnnouncement() {
            const title = document.getElementById('announcementTitle').value;
            const priority = document.getElementById('announcementPriority').value;
            const content = quill.root.innerHTML;
            const verifyCode = document.getElementById('verificationCode').value;

            // Here you would send the data to your backend
            fetch('/editors/uploadAnnouncement', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ title, priority, content, verifyCode })
            })
            .then(response => {
                if (response.ok) {
                    // Close the modal and refresh announcements
                    closeAnnouncementModal();
                    loadAnnouncements(); // You would implement this function to refresh the list
                    alert('Announcement published successfully!');
                } else {
                    alert('Failed to publish announcement.');
                }
            })
            .catch(error => {
                console.error('Error publishing announcement:', error);
                alert('Error publishing announcement.');
            });
        }

        function updateAnnouncement() {
            const title = document.getElementById('editAnnouncementTitle').value;
            const priority = document.getElementById('editAnnouncementPriority').value;
            const content = editQuill.root.innerHTML;
              const verifyCode = document.getElementById('verificationCode').value;
            // Here you would send the data to your backend
            console.log('Updating announcement:', { title, priority, content });
            fetch("/editors/editAnnouncement", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ title, priority, content, id: document.getElementById('editAnnouncementId').value, verifyCode })
            })
            
            // Close the modal and refresh announcements
            closeEditAnnouncementModal();
            loadAnnouncements(); // You would implement this function to refresh the list
            alert('Announcement updated successfully!');
        }

        function deleteAnnouncement(id) {
            // Here you would send the delete request to your backend
            const verifyCode = document.getElementById('verificationCode').value;

            fetch("/editors/deleteAnnouncement", {
             method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body:JSON.stringify({id:id, verifyCode})
            }).then(res => res.json())
            .then(data =>{
                if(data.success){
   // Refresh announcements
            loadAnnouncements(); // You would implement this function to refresh the list
            alert('Announcement deleted successfully!');
                }else{
                    alert(data.error)
                }
            })
         
        }

        // Sample function to load announcements - in a real app this would fetch from your backend
       async function loadAnnouncements() {
            const announcementsContainer = document.getElementById('announcementsContainer');
            announcementsContainer.innerHTML = '';
            
            const announcementData = await fetch("/editors/getAnnouncements")
                .then(response => response.json())
                .catch(error => {
                    console.error('Error fetching announcements:', error);
                    return [];
                });
            // Sample data - in a real app you would fetch this from your API
            const sampleAnnouncements = announcementData.announcements;
            
            if (sampleAnnouncements.length === 0) {
                announcementsContainer.innerHTML = '<tr><td colspan="7" class="text-center">No announcements found.</td></tr>';
                return;
            }
            
            // Update counts
            document.querySelector('.activeAnnouncementsCount').textContent = 
                sampleAnnouncements.filter(a => a.status === 'active').length;
            document.querySelector('.archivedAnnouncementsCount').textContent = 
                sampleAnnouncements.filter(a => a.status === 'archived').length;
            document.querySelector('.highPriorityCount').textContent = 
                sampleAnnouncements.filter(a => a.priority === 'high').length;
            
            // Populate the table
            sampleAnnouncements.forEach(announcement => {
                const row = document.createElement('tr');
                
                // Priority badge
                let priorityBadge = '';
                if (announcement.priority === '1' || announcement.priority === 'high' || announcement.priority == 1) {
                    priorityBadge = '<span class="priority-high">High Priority</span>';
                } else if (announcement.priority === '2') {
                    priorityBadge = '<span class="priority-medium">Medium Priority</span>';
                } else {
                    priorityBadge = '<span class="priority-low">Low Priority</span>';
                }
                
                // Status badge
                // let statusBadge = '';
                // if (announcement.status === 'active') {
                //     statusBadge = '<span style="color: green;">Active</span>';
                // } else {
                //     statusBadge = '<span style="color: gray;">Archived</span>';
                // }
                
                // Action buttons
                let actions = `
                    <button class="btn btn-sm btn-primary" onclick="openEditAnnouncementModal(${announcement.id})">
                        <i class="bi bi-pencil"></i> Edit
                    </button>
                    <button class="btn btn-sm btn-danger" onclick="verifyAction('delete', ${announcement.id})">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                `;
                
                if (announcement.status === 'active') {
                    actions += `
                        <button class="btn btn-sm btn-secondary" onclick="archiveAnnouncement(${announcement.id})">
                            <i class="bi bi-archive"></i> Archive
                        </button>
                    `;
                } else {
                    actions += `
                        <button class="btn btn-sm btn-success" onclick="window.location.href='https://asfirj.org/announcements?x=${announcement.slug}'">
                            <i class="bi bi-eye"></i> View
                        </button>
                    `;
                }
                
                row.innerHTML = `
                    <td>${announcement.title}</td>
                    <td>${priorityBadge}</td>
                    <td>${announcement.admin_email}</td>
                    <td>${new Date(announcement.timestamp).toLocaleString()}</td>
                    <td>${actions}</td>
                `;
                
                announcementsContainer.appendChild(row);
            });
        }

        // Sample functions for archive/activate - in a real app these would call your API
        function archiveAnnouncement(id) {
            if (confirm('Are you sure you want to archive this announcement?')) {
                console.log('Archiving announcement', id);
                // loadAnnouncements(); // Refresh the list
                alert('Announcement archived!');
            }
        }

        function activateAnnouncement(id) {
            console.log('Activating announcement', id);
            // loadAnnouncements(); // Refresh the list
            alert('Announcement activated!');
        }

        // Load announcements when page loads
        window.onload = function() {
            // Hide preloader
            const preloader = document.querySelector('.preloader2');
            preloader.classList.add('hidden');
            
            // Load announcements
            loadAnnouncements();
        };

        // Close modals if clicked outside
        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                event.target.style.display = 'none';
            }
        };
    </script>

    <!-- All Jquery -->
    <script src="/editorStatic/plugins/bower_components/jquery/dist/jquery.min.js?v=<%=new Date() %>"></script>
    <!-- Bootstrap tether Core JavaScript -->
    <script src="/editorStatic/bootstrap/dist/js/bootstrap.bundle.min.js?v=<%=new Date() %>"></script>
    <script src="/editorStatic/js/app-style-switcher.js?v=<%=new Date() %>"></script>
    <!--Wave Effects -->
    <script src="/editorStatic/js/waves.js?v=<%=new Date() %>"></script>
    <!--Menu sidebar -->
    <script src="/editorStatic/js/sidebarmenu.js?v=<%=new Date() %>"></script>
    <!--Custom JavaScript -->
    <script src="/editorStatic/js/custom.js?v=<%=new Date() %>"></script>
    <!-- Quill JS -->
</body>
</html>